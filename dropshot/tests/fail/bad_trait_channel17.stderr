error[E0277]: the trait bound `dropshot::WebsocketConnection: SharedExtractor` is not satisfied
  --> tests/fail/bad_trait_channel17.rs:15:5
   |
15 |     #[channel {
   |     ^ the trait `SharedExtractor` is not implemented for `dropshot::WebsocketConnection`, which is required by `(dropshot::WebsocketConnection, WebsocketUpgrade): dropshot::extractor::common::RequestExtractor`
   |
   = help: the following other types implement trait `SharedExtractor`:
             dropshot::Path<PathType>
             dropshot::Query<QueryType>
   = note: required for `(dropshot::WebsocketConnection, WebsocketUpgrade)` to implement `dropshot::extractor::common::RequestExtractor`
note: required by a bound in `ApiEndpoint::<StubContext>::new_for_types`
  --> src/api_description.rs
   |
   |     pub fn new_for_types<FuncParams, ResultType>(
   |            ------------- required by a bound in this associated function
...
   |         FuncParams: RequestExtractor + 'static,
   |                     ^^^^^^^^^^^^^^^^ required by this bound in `ApiEndpoint::<StubContext>::new_for_types`

error[E0277]: the trait bound `fn(dropshot::RequestContext<<ServerImpl as MyServer>::Context>, dropshot::WebsocketConnection, WebsocketUpgrade) -> impl Future<Output = Result<http::response::Response<hyper::body::body::Body>, HttpError>> {two_websocket_channels_adapter::<ServerImpl>}: dropshot::handler::HttpHandlerFunc<_, _, _>` is not satisfied
  --> tests/fail/bad_trait_channel17.rs:15:5
   |
10 |   #[dropshot::api_description]
   |   ---------------------------- required by a bound introduced by this call
...
15 | /     #[channel {
16 | |         protocol = WEBSOCKETS,
17 | |         path = "/test",
18 | |     }]
19 | |     async fn two_websocket_channels(
   | |_________^ the trait `dropshot::handler::HttpHandlerFunc<_, _, _>` is not implemented for fn item `fn(dropshot::RequestContext<<ServerImpl as MyServer>::Context>, dropshot::WebsocketConnection, WebsocketUpgrade) -> impl Future<Output = Result<http::response::Response<hyper::body::body::Body>, HttpError>> {two_websocket_channels_adapter::<ServerImpl>}`
   |
note: required by a bound in `ApiEndpoint::<Context>::new`
  --> src/api_description.rs
   |
   |     pub fn new<HandlerType, FuncParams, ResponseType>(
   |            --- required by a bound in this associated function
...
   |         HandlerType: HttpHandlerFunc<Context, FuncParams, ResponseType>,
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ApiEndpoint::<Context>::new`
