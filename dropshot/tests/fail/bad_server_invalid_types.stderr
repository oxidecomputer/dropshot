error[E0432]: unresolved import `dropshot::dropshot_server`
 --> tests/fail/bad_server_invalid_types.rs:3:16
  |
3 | use dropshot::{dropshot_server, HttpError, HttpResponseOk, RequestContext};
  |                ^^^^^^^^^^^^^^^ no `dropshot_server` in the root

error: cannot determine resolution for the attribute macro `dropshot_server`
 --> tests/fail/bad_server_invalid_types.rs:5:3
  |
5 | #[dropshot_server]
  |   ^^^^^^^^^^^^^^^
  |
  = note: import resolution is stuck, try simplifying macro imports

error: cannot find attribute `endpoint` in this scope
 --> tests/fail/bad_server_invalid_types.rs:9:7
  |
9 |     #[endpoint { method = GET, path = "/test" }]
  |       ^^^^^^^^
  |
help: consider importing one of these items
  |
3 + use dropshot::endpoint;
  |
3 + use dropshot_endpoint::endpoint;
  |

error: cannot find attribute `endpoint` in this scope
  --> tests/fail/bad_server_invalid_types.rs:14:7
   |
14 |     #[endpoint { method = GET, path = "/test" }]
   |       ^^^^^^^^
   |
help: consider importing one of these items
   |
3  + use dropshot::endpoint;
   |
3  + use dropshot_endpoint::endpoint;
   |

error: cannot find attribute `endpoint` in this scope
  --> tests/fail/bad_server_invalid_types.rs:19:7
   |
19 |     #[endpoint { method = GET, path = "/test" }]
   |       ^^^^^^^^
   |
help: consider importing one of these items
   |
3  + use dropshot::endpoint;
   |
3  + use dropshot_endpoint::endpoint;
   |

error: cannot find attribute `endpoint` in this scope
  --> tests/fail/bad_server_invalid_types.rs:24:7
   |
24 |     #[endpoint { method = GET, path = "/test" }]
   |       ^^^^^^^^
   |
help: consider importing one of these items
   |
3  + use dropshot::endpoint;
   |
3  + use dropshot_endpoint::endpoint;
   |

error[E0277]: `<Self as MyServer>::Context` cannot be sent between threads safely
  --> tests/fail/bad_server_invalid_types.rs:11:16
   |
11 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be sent between threads safely
   |
   = help: the trait `Send` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
12 |     ) -> HttpResponseOk<()> where <Self as MyServer>::Context: Send;
   |                             +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be shared between threads safely
  --> tests/fail/bad_server_invalid_types.rs:11:16
   |
11 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
12 |     ) -> HttpResponseOk<()> where <Self as MyServer>::Context: Sync;
   |                             +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be sent between threads safely
  --> tests/fail/bad_server_invalid_types.rs:16:16
   |
16 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be sent between threads safely
   |
   = help: the trait `Send` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
17 |     ) -> Result<HttpResponseOk<()>, ()> where <Self as MyServer>::Context: Send;
   |                                         +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be shared between threads safely
  --> tests/fail/bad_server_invalid_types.rs:16:16
   |
16 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
17 |     ) -> Result<HttpResponseOk<()>, ()> where <Self as MyServer>::Context: Sync;
   |                                         +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be sent between threads safely
  --> tests/fail/bad_server_invalid_types.rs:21:16
   |
21 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be sent between threads safely
   |
   = help: the trait `Send` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
22 |     ) -> Result<(), HttpError> where <Self as MyServer>::Context: Send;
   |                                +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be shared between threads safely
  --> tests/fail/bad_server_invalid_types.rs:21:16
   |
21 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
22 |     ) -> Result<(), HttpError> where <Self as MyServer>::Context: Sync;
   |                                +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be sent between threads safely
  --> tests/fail/bad_server_invalid_types.rs:26:16
   |
26 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be sent between threads safely
   |
   = help: the trait `Send` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
27 |     ) -> Result<(), ()> where <Self as MyServer>::Context: Send;
   |                         +++++++++++++++++++++++++++++++++++++++

error[E0277]: `<Self as MyServer>::Context` cannot be shared between threads safely
  --> tests/fail/bad_server_invalid_types.rs:26:16
   |
26 |         rqctx: RequestContext<Self::Context>,
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `<Self as MyServer>::Context` cannot be shared between threads safely
   |
   = help: the trait `Sync` is not implemented for `<Self as MyServer>::Context`
   = note: required for `<Self as MyServer>::Context` to implement `ServerContext`
note: required by a bound in `RequestContext`
  --> src/handler.rs
   |
   | pub struct RequestContext<Context: ServerContext> {
   |                                    ^^^^^^^^^^^^^ required by this bound in `RequestContext`
help: consider further restricting the associated type
   |
27 |     ) -> Result<(), ()> where <Self as MyServer>::Context: Sync;
   |                         +++++++++++++++++++++++++++++++++++++++
