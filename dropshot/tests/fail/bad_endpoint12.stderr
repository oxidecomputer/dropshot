error[E0277]: the trait bound `String: HttpResponse` is not satisfied
  --> tests/fail/bad_endpoint12.rs:15:6
   |
15 | ) -> Result<String, HttpError> {
   |      ^^^^^^ the trait `HttpCodedResponse` is not implemented for `String`
   |
   = help: the following other types implement trait `HttpCodedResponse`:
             HttpResponseAccepted<T>
             HttpResponseCreated<T>
             HttpResponseDeleted
             HttpResponseOk<T>
             HttpResponseUpdatedNoContent
             dropshot::handler::HttpResponseFoundStatus
             dropshot::handler::HttpResponseSeeOtherStatus
             dropshot::handler::HttpResponseTemporaryRedirectStatus
   = note: required for `String` to implement `HttpResponse`
note: required by a bound in `validate_response_type`
  --> tests/fail/bad_endpoint12.rs:9:1
   |
9  | / #[endpoint {
10 | |     method = GET,
11 | |     path = "/test",
12 | | }]
   | |__^ required by this bound in `validate_response_type`
...
15 |   ) -> Result<String, HttpError> {
   |        ------ required by a bound in this function
   = note: this error originates in the attribute macro `endpoint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(RequestContext<()>) -> impl Future<Output = Result<String, HttpError>> {<impl std::convert::From<bad_response_type> for ApiEndpoint<<RequestContext<()> as RequestContextArgument>::Context>>::from::bad_response_type}: dropshot::handler::HttpHandlerFunc<_, _, _>` is not satisfied
  --> tests/fail/bad_endpoint12.rs:13:10
   |
9  | / #[endpoint {
10 | |     method = GET,
11 | |     path = "/test",
12 | | }]
   | |__- required by a bound introduced by this call
13 |   async fn bad_response_type(
   |            ^^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `dropshot::handler::HttpHandlerFunc<_, _, _>` is not implemented for fn item `fn(RequestContext<()>) -> impl Future<Output = Result<String, HttpError>> {<impl std::convert::From<bad_response_type> for ApiEndpoint<<RequestContext<()> as RequestContextArgument>::Context>>::from::bad_response_type}`
note: required by a bound in `ApiEndpoint::<Context>::new`
  --> src/api_description.rs
   |
   |     pub fn new<HandlerType, FuncParams, ResponseType>(
   |            --- required by a bound in this associated function
...
   |         HandlerType: HttpHandlerFunc<Context, FuncParams, ResponseType>,
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ApiEndpoint::<Context>::new`
