error[E0631]: type mismatch in closure arguments
  --> tests/fail/bad_trait_channel18.rs:26:5
   |
26 |     async fn websocket_channel_not_last(
   |     ^^^^^
   |     |
   |     expected due to this
   |     found signature defined here
   |
   = note: expected closure signature `fn(dropshot::WebsocketConnection) -> _`
              found closure signature `fn(dropshot::Query<Stuff>) -> _`
note: required by a bound in `WebsocketUpgrade::handle`
  --> src/websocket.rs
   |
   |     pub fn handle<C, F>(mut self, handler: C) -> WebsocketEndpointResult
   |            ------ required by a bound in this associated function
   |     where
   |         C: FnOnce(WebsocketConnection) -> F + Send + 'static,
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `WebsocketUpgrade::handle`

error[E0271]: type mismatch resolving `<Query<Stuff> as TypeEq>::This == WebsocketConnection`
  --> tests/fail/bad_trait_channel18.rs:29:17
   |
29 |         _query: Query<Stuff>,
   |                 ^^^^^^^^^^^^ type mismatch resolving `<Query<Stuff> as TypeEq>::This == WebsocketConnection`
   |
note: expected this to be `dropshot::WebsocketConnection`
  --> tests/fail/bad_trait_channel18.rs:29:17
   |
29 |         _query: Query<Stuff>,
   |                 ^^^^^
   = note: expected struct `dropshot::WebsocketConnection`
              found struct `dropshot::Query<Stuff>`
note: required by a bound in `validate_websocket_connection_type`
  --> tests/fail/bad_trait_channel18.rs:29:17
   |
29 |         _query: Query<Stuff>,
   |                 ^^^^^ required by this bound in `validate_websocket_connection_type`

error[E0277]: the trait bound `dropshot::WebsocketConnection: SharedExtractor` is not satisfied
  --> tests/fail/bad_trait_channel18.rs:22:5
   |
22 |     #[channel {
   |     ^ the trait `SharedExtractor` is not implemented for `dropshot::WebsocketConnection`, which is required by `(dropshot::WebsocketConnection, WebsocketUpgrade): dropshot::extractor::common::RequestExtractor`
   |
   = help: the following other types implement trait `SharedExtractor`:
             dropshot::Path<PathType>
             dropshot::Query<QueryType>
   = note: required for `(dropshot::WebsocketConnection, WebsocketUpgrade)` to implement `dropshot::extractor::common::RequestExtractor`
note: required by a bound in `ApiEndpoint::<StubContext>::new_for_types`
  --> src/api_description.rs
   |
   |     pub fn new_for_types<FuncParams, ResultType>(
   |            ------------- required by a bound in this associated function
...
   |         FuncParams: RequestExtractor + 'static,
   |                     ^^^^^^^^^^^^^^^^ required by this bound in `ApiEndpoint::<StubContext>::new_for_types`

error[E0277]: the trait bound `fn(dropshot::RequestContext<<ServerImpl as MyServer>::Context>, dropshot::WebsocketConnection, WebsocketUpgrade) -> impl Future<Output = Result<http::response::Response<hyper::body::body::Body>, HttpError>> {websocket_channel_not_last_adapter::<ServerImpl>}: dropshot::handler::HttpHandlerFunc<_, _, _>` is not satisfied
  --> tests/fail/bad_trait_channel18.rs:22:5
   |
17 |   #[dropshot::api_description]
   |   ---------------------------- required by a bound introduced by this call
...
22 | /     #[channel {
23 | |         protocol = WEBSOCKETS,
24 | |         path = "/test",
25 | |     }]
26 | |     async fn websocket_channel_not_last(
   | |_________^ the trait `dropshot::handler::HttpHandlerFunc<_, _, _>` is not implemented for fn item `fn(dropshot::RequestContext<<ServerImpl as MyServer>::Context>, dropshot::WebsocketConnection, WebsocketUpgrade) -> impl Future<Output = Result<http::response::Response<hyper::body::body::Body>, HttpError>> {websocket_channel_not_last_adapter::<ServerImpl>}`
   |
note: required by a bound in `ApiEndpoint::<Context>::new`
  --> src/api_description.rs
   |
   |     pub fn new<HandlerType, FuncParams, ResponseType>(
   |            --- required by a bound in this associated function
...
   |         HandlerType: HttpHandlerFunc<Context, FuncParams, ResponseType>,
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ApiEndpoint::<Context>::new`
