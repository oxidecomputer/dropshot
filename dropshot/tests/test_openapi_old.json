{
  "openapi": "3.0.3",
  "info": {
    "title": "test",
    "version": "threeve"
  },
  "paths": {
    "/datagoeshere": {
      "put": {
        "operationId": "handler7",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dup1": {
      "get": {
        "operationId": "handler8",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeverDuplicatedResponseTopLevel"
                }
              }
            }
          }
        }
      }
    },
    "/dup2": {
      "get": {
        "operationId": "handler9",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeverDuplicatedResponseTopLevel"
                }
              }
            }
          }
        }
      }
    },
    "/dup5": {
      "put": {
        "operationId": "handler10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeverDuplicatedBodyTopLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dup6": {
      "put": {
        "operationId": "handler11",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeverDuplicatedBodyTopLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dup7": {
      "put": {
        "operationId": "handler12",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeverDuplicatedTop"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/dup8": {
      "get": {
        "operationId": "handler13",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeverDuplicatedTop"
                }
              }
            }
          }
        }
      }
    },
    "/impairment": {
      "get": {
        "operationId": "handler6",
        "parameters": [
          {
            "in": "query",
            "name": "a_number",
            "schema": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "Maximum number of items returned by a single call",
              "type": "integer",
              "format": "uint32",
              "minimum": 1
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "page_token",
            "schema": {
              "description": "Token returned by previous call to retreive the subsequent page",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseItemResultsPage"
                }
              }
            }
          }
        },
        "x-dropshot-pagination": true
      }
    },
    "/test/camera": {
      "post": {
        "operationId": "handler4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/test/man/{x}": {
      "delete": {
        "operationId": "handler3",
        "parameters": [
          {
            "in": "path",
            "name": "x",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "successful deletion"
          }
        }
      }
    },
    "/test/person": {
      "get": {
        "description": "This is a multi-line comment. It uses Rust-style.",
        "operationId": "handler1",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/test/tv/{x}": {
      "post": {
        "tags": [
          "person",
          "woman",
          "man",
          "camera",
          "tv"
        ],
        "operationId": "handler5",
        "parameters": [
          {
            "in": "path",
            "name": "x",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "tomax",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "xamot",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "successfully enqueued operation"
          }
        }
      }
    },
    "/test/woman": {
      "put": {
        "description": "This is a multi-line comment. It uses C-style.",
        "operationId": "handler2",
        "parameters": [
          {
            "in": "query",
            "name": "tomax",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "xamot",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "204": {
            "description": "resource updated"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BodyParam": {
        "type": "object",
        "properties": {
          "any": {},
          "x": {
            "type": "string"
          }
        },
        "required": [
          "any",
          "x"
        ]
      },
      "NeverDuplicatedBodyNextLevel": {
        "type": "object",
        "properties": {
          "v": {
            "type": "boolean"
          }
        },
        "required": [
          "v"
        ]
      },
      "NeverDuplicatedBodyTopLevel": {
        "type": "object",
        "properties": {
          "_b": {
            "$ref": "#/components/schemas/NeverDuplicatedBodyNextLevel"
          }
        },
        "required": [
          "_b"
        ]
      },
      "NeverDuplicatedNext": {
        "type": "object",
        "properties": {
          "v": {
            "type": "boolean"
          }
        },
        "required": [
          "v"
        ]
      },
      "NeverDuplicatedResponseNextLevel": {
        "type": "object",
        "properties": {
          "v": {
            "type": "boolean"
          }
        },
        "required": [
          "v"
        ]
      },
      "NeverDuplicatedResponseTopLevel": {
        "type": "object",
        "properties": {
          "b": {
            "$ref": "#/components/schemas/NeverDuplicatedResponseNextLevel"
          }
        },
        "required": [
          "b"
        ]
      },
      "NeverDuplicatedTop": {
        "type": "object",
        "properties": {
          "b": {
            "$ref": "#/components/schemas/NeverDuplicatedNext"
          }
        },
        "required": [
          "b"
        ]
      },
      "Response": {
        "type": "object"
      },
      "ResponseItem": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          }
        },
        "required": [
          "word"
        ]
      },
      "ResponseItemResultsPage": {
        "description": "A single page of results",
        "type": "object",
        "properties": {
          "items": {
            "description": "list of items on this page of results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseItem"
            }
          },
          "next_page": {
            "description": "token used to fetch the next page of results (if any)",
            "type": "string"
          }
        },
        "required": [
          "items"
        ]
      }
    }
  }
}